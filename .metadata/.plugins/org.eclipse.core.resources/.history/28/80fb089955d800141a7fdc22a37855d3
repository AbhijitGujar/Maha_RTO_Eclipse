package com.example.punerto.Activity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import co.example.punerto.classes.ActivityLearnLicAppointment;
import co.example.punerto.classes.RtoDialog;

import com.androidexample.gcm.R;


import android.app.Activity;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.View;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.Toast;

public class ActivityLearnLicAppointment_Tab5 extends Activity 
{
	LinearLayout lay1;
	EditText attdlnumber,date_attdtofconviction,attreason;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) 
	{
		super.onCreate(savedInstanceState);

		if (ActivityLanguage.lang.equals("English")) 
			setContentView(R.layout.activity_learn_lic_app_tab5);
		else
			setContentView(R.layout.activity_learn_lic_app_tab5);
		
		 lay1 = (LinearLayout) findViewById(R.id.lay_convicted);
		 
		 
		 attdlnumber =(EditText) findViewById(R.id.attdlnumber);
		 
		 date_attdtofconviction =(EditText) findViewById(R.id.date_attdtofconviction);
		 attreason =(EditText) findViewById(R.id.attreason);
		 
		
		//RtoDialog.showNeutralDialog(ActivityLearnLicAppointment_Tab1.this,"Form Restrictions","Special Character (″ , & , < , > , ′ ) are not allowed");
		
	}
	attdlnumber.setOnKeyListener(this);
	
	public boolean onKey(View v, int keyCode, KeyEvent event)
	{
	    if ((event.getAction() == KeyEvent.ACTION_DOWN) &&
	        (keyCode == KeyEvent.KEYCODE_ENTER))
	    {
	        // Done pressed!  Do something here.
	    }
	    // Returning false allows other listeners to react to the press.
	    return false;
	}
	
	
	public void onCheckboxClicked(View view) {
	    // Is the view now checked?
	    boolean checked = ((CheckBox) view).isChecked();
	    
	    switch(view.getId()) 
	    {
	        case R.id.parentletterforbelow18age:
	            if (checked)
	            	{
	            	ActivityLearnLicAppointment.parentletterforbelow18age="y";
	            	}
	            else
	            	{
	            	ActivityLearnLicAppointment.parentletterforbelow18age="n";
	            	}
	            break;
	        case R.id.allnecessarycertificates:
	            if (checked)
	            	{
	            	ActivityLearnLicAppointment.allnecessarycertificates="y";
	            	}
	            else
	            	{
	            	ActivityLearnLicAppointment.allnecessarycertificates="n";
	            	}
	            break;
	       
	        case R.id.examptedmadicaltest:
	            if (checked)
	            	{
	            	ActivityLearnLicAppointment.examptedmadicaltest="y";
	            	}
	            else
	            	{
	            	ActivityLearnLicAppointment.examptedmadicaltest="n";
	            	}
	            break;
	       
	        case R.id.examptedpreliminarytest:
	            if (checked)
	            	{
	            	ActivityLearnLicAppointment.examptedpreliminarytest="y";
	            	}
	            else
	            	{
	            	ActivityLearnLicAppointment.examptedpreliminarytest="n";
	            	}
	            break;
	       
	        case R.id.convicted:
	            if (checked)
	            	{
	            	lay1.setVisibility(View.VISIBLE);
	            	}
	            else
	            	{
	            	lay1.setVisibility(View.GONE);
	            	}
	            break;
	       
	            
	    }
	}
	
	
}