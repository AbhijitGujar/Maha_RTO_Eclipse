package com.example.punerto.Activity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import co.example.punerto.classes.Faq;

import com.example.punerto.R;
import com.example.punerto.Adapter.ExpandableListAdapter;

import android.os.Bundle;
import android.support.v7.app.ActionBarActivity;
import android.widget.ExpandableListView;

public class ActivityExpandableFaq extends ActionBarActivity {

	ExpandableListAdapter listAdapter;
	ExpandableListView expListView;
	List<String> listDataHeader;
	HashMap<String, List<String>> listDataChild;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_expandable_faq);

		// get the listview
		expListView = (ExpandableListView) findViewById(R.id.lvExp);

		// preparing list data
		prepareListData();

		listAdapter = new ExpandableListAdapter(this, listDataHeader,
				listDataChild);

		// setting list adapter
		expListView.setAdapter(listAdapter);
	}

	/*
	 * Preparing the list data
	 */
	private void prepareListData() {

		listDataHeader = new ArrayList<String>();
		listDataChild = new HashMap<String, List<String>>();

		// Adding child data
		listDataHeader.add("1 What is RTO?");
		listDataHeader.add("2 How long is a learner license valid?");
		listDataHeader
				.add("3 I have obtained a learner license in mumbai, is it valid in chennai?");

		listDataHeader.add("4 Remain");
		listDataHeader.add("5 Remain ");
		listDataHeader
				.add("6 My license is expired 2 yesr's back, do I need to get a fresh one or can I still renew it?");

		listDataHeader.add("7 Can I drive a motorcycle with learner license?");
		listDataHeader
				.add("8 Who is exempted from test of competence for driving license?");
		listDataHeader
				.add("9 No, driving with such licence is an offence under motor vehicle laws. ");

		listDataHeader.add("10 Can I drive with an expired license?");
		listDataHeader
				.add("11 Do I need to keep the documents of vehicle with me while driving?");
		listDataHeader
				.add("12 Which douments I need to produce in support of age group?");

		listDataHeader
				.add("13 Which documents I need to produce in support of Address proof?");
		listDataHeader
				.add("14 Do I need to produce original age address proof while obtaining certificate?");
		listDataHeader
				.add("15 Do I need to be present while obtaining the license?");

		listDataHeader
				.add("16 How many hours of drving instructions a motor driving school is supposed to impart to the candidateenrolled?");
		listDataHeader
				.add("17 What is difference between contract carriage and stage carriage?");
		listDataHeader
				.add("18 What is the gross vehicle weight of the vehicle?");

		listDataHeader.add("19 What is invalid carriage?");
		listDataHeader.add("20 Which are non-transport vehicles?");
		listDataHeader.add("21 Which are the transport vehicles?");

		listDataHeader
				.add("22 I have purchased a new car, how long I can use it without registering with R.T.O.?");
		listDataHeader
				.add("23 Can a vehicle registered in one state can be used in another state?");
		listDataHeader
				.add("24 I have lost registration certificate (RC Book) of my car where can I get new one?");

		listDataHeader
				.add("25 Can a RTO officer catch my vehicle for not paying motor vehicle taxes?");
		listDataHeader
				.add("26 I have valid P.U.C. certificate obtained from authorised P.U.C. centre. Can I be stopped on road and asked to retest my vehicle by RTO Officer?");
		listDataHeader
				.add("27 Is a police on duty at traffic junctions belongs to RTO dept.?");

		listDataHeader.add("28 Can I drive a vehicle without insurance?");
		listDataHeader.add("29 What is the validity of fitness certificate?");
		listDataHeader
				.add("30 How long is the registration certificate is valid for any vehicle?");

		listDataHeader
				.add("31 How can I renew the registration of my motorcycle and car? ");
		listDataHeader
				.add("32 Can RTO cancel the valid certificate of fitness at any time?");
		listDataHeader
				.add("33 What to do if a checking report / memo / challan is issued to my vehicle by RTO?");

		listDataHeader
				.add("34 Is there any speed limit to drive the vehicle?  ");
		listDataHeader.add("35 Is there any code to paint the number plates?");
		listDataHeader
				.add("36 Which are the permissible emission norms for different vehicles?");

		listDataHeader
				.add("37 How to changing /updating one's address in the driving license?");
		listDataHeader
				.add("38 How can new buyer of the car come to know about tax calculation?");
		listDataHeader
				.add("39 What is the procedure for trnasfer of ownership duplicate registration change of address for citizen?");

		// Adding child data
		List<String> q1 = new ArrayList<String>();
		q1.add("Ans :RTO is an abbreviation used for Regional Transport Officer. Regional Transport Officer is licensing, registration, taxation authority of that region.");

		List<String> q2 = new ArrayList<String>();
		q2.add("Ans : 6 months");

		List<String> q3 = new ArrayList<String>();
		q3.add("Ans A learner as well as permanent licence is valid throughout India");

		List<String> q4 = new ArrayList<String>();
		q4.add("Very well, prior to the date of expiry.");

		List<String> q5 = new ArrayList<String>();
		q5.add("You have to apply to the licencing authority (RTO) in the jurisdiction in which you ordinarily reside or carry on business or the motor driving school from where you intend to get the instructions is situated.");

		List<String> q6 = new ArrayList<String>();
		q6.add("You can renew your licence within 5 years from its date of expiry. Penalty for late renewal is charged after first 30 days of expiry. Meaning you have 30 days grace period after the date of expiry to renew it. Penalty for late renewal is Rs10 per year or part of year for the period lapsed.");

		List<String> q7 = new ArrayList<String>();
		q7.add("Learner’s licence is meant for learning purpose only. It is not a full-fledged licence. You can drive only with pillion rider possessing valid driving licence with him. ");

		List<String> q8 = new ArrayList<String>();
		q8.add("A person holding a driving licence issued by the Defence Department to drive their vehicles Or issued by a competent authority of any country outside India subject to the compliance of medical certificate is exempted from the test of competence to drive such class of vehicle");

		List<String> q9 = new ArrayList<String>();
		q9.add("No, driving with such licence is an offence under motor vehicle laws. ");

		List<String> q10 = new ArrayList<String>();
		q10.add("Not Available");

		List<String> q11 = new ArrayList<String>();
		q11.add("You must produce following valid document in original if demanded by police officer in uniform or an officer from motor vehicle dept. I. Driving licence II. Registration certificate III. Taxation certificate IV. Insurance certificate V. PUC certificate VI. Road permit and fitness certificate ");

		List<String> q12 = new ArrayList<String>();
		q12.add("Any of the following documents can be used for Age proof: 1.School leaving certificate 2.SSC certificate 3.Passport 4.Electricity bill 5.Telephone bill 6.Rent receipt ");

		List<String> q13 = new ArrayList<String>();
		q13.add("Any of the following documents can be used for Address proof: 1.Electoral roll/ voters I-card 2.Life insurance policy 3.Birth certificate 4.Passport 5.Civil sersurgeon's certificate ");

		List<String> q14 = new ArrayList<String>();
		q14.add("You can produce the copies attested by a gazetted officer of the state government or central or local body ");

		List<String> q15 = new ArrayList<String>();
		q15.add("You must be present for obtaining a licence at RTO office ");

		List<String> q16 = new ArrayList<String>();
		q16.add("Not Available");

		List<String> q17 = new ArrayList<String>();
		q17.add("The Shawshank Redemption");

		List<String> q18 = new ArrayList<String>();
		q18.add("The Shawshank Redemption");

		List<String> q19 = new ArrayList<String>();
		q19.add("The Shawshank Redemption");

		List<String> q20 = new ArrayList<String>();
		q20.add("The Shawshank Redemption");

		List<String> q21 = new ArrayList<String>();
		q21.add("The Shawshank Redemption");

		List<String> q22 = new ArrayList<String>();
		q22.add("The Shawshank Redemption");

		List<String> q23 = new ArrayList<String>();
		q23.add("The Shawshank Redemption");

		List<String> q24 = new ArrayList<String>();
		q24.add("The Shawshank Redemption");

		List<String> q25 = new ArrayList<String>();
		q25.add("The Shawshank Redemption");

		List<String> q26 = new ArrayList<String>();
		q26.add("The Shawshank Redemption");

		List<String> q27 = new ArrayList<String>();
		q27.add("The Shawshank Redemption");

		List<String> q28 = new ArrayList<String>();
		q28.add("The Shawshank Redemption");

		List<String> q29 = new ArrayList<String>();
		q29.add("The Shawshank Redemption");

		List<String> q30 = new ArrayList<String>();
		q30.add("The Shawshank Redemption");

		List<String> q31 = new ArrayList<String>();
		q31.add("The Shawshank Redemption");

		List<String> q32 = new ArrayList<String>();
		q32.add("The Shawshank Redemption");

		List<String> q33 = new ArrayList<String>();
		q33.add("The Shawshank Redemption");

		List<String> q34 = new ArrayList<String>();
		q34.add("The Shawshank Redemption");

		List<String> q35 = new ArrayList<String>();
		q35.add("The Shawshank Redemption");

		List<String> q36 = new ArrayList<String>();
		q36.add("The Shawshank Redemption");

		List<String> q37 = new ArrayList<String>();
		q37.add("The Shawshank Redemption");

		List<String> q38 = new ArrayList<String>();
		q38.add("The Shawshank Redemption");

		List<String> q39 = new ArrayList<String>();
		q39.add("The Shawshank Redemption");

		listDataChild.put(listDataHeader.get(0), q1);
		listDataChild.put(listDataHeader.get(1), q2);
		listDataChild.put(listDataHeader.get(2), q3);
		listDataChild.put(listDataHeader.get(3), q4);
		listDataChild.put(listDataHeader.get(4), q5);
		listDataChild.put(listDataHeader.get(5), q6);
		listDataChild.put(listDataHeader.get(6), q7);
		listDataChild.put(listDataHeader.get(7), q8);
		listDataChild.put(listDataHeader.get(8), q9);
		listDataChild.put(listDataHeader.get(9), q10);
		listDataChild.put(listDataHeader.get(10), q11);
		listDataChild.put(listDataHeader.get(11), q12);
		listDataChild.put(listDataHeader.get(12), q13);
		listDataChild.put(listDataHeader.get(13), q14);
		listDataChild.put(listDataHeader.get(14), q15);
		listDataChild.put(listDataHeader.get(15), q16);
		listDataChild.put(listDataHeader.get(16), q17);
		listDataChild.put(listDataHeader.get(17), q18);
		listDataChild.put(listDataHeader.get(18), q19);
		listDataChild.put(listDataHeader.get(19), q20);
		listDataChild.put(listDataHeader.get(20), q21);
		listDataChild.put(listDataHeader.get(21), q22);
		listDataChild.put(listDataHeader.get(22), q23);
		listDataChild.put(listDataHeader.get(23), q24);
		listDataChild.put(listDataHeader.get(24), q25);
		listDataChild.put(listDataHeader.get(25), q26);
		listDataChild.put(listDataHeader.get(26), q27);
		listDataChild.put(listDataHeader.get(27), q28);
		listDataChild.put(listDataHeader.get(28), q29);
		listDataChild.put(listDataHeader.get(29), q30);
		listDataChild.put(listDataHeader.get(30), q31);
		listDataChild.put(listDataHeader.get(31), q32);
		listDataChild.put(listDataHeader.get(32), q33);
		listDataChild.put(listDataHeader.get(33), q34);
		listDataChild.put(listDataHeader.get(34), q35);
		listDataChild.put(listDataHeader.get(35), q36);
		listDataChild.put(listDataHeader.get(36), q37);
		listDataChild.put(listDataHeader.get(37), q38);
		listDataChild.put(listDataHeader.get(38), q39);
		// listDataChild.put(listDataHeader.get(39), q39);

		// Header, Child data
		// listDataChild.put(listDataHeader.get(1), nowShowing);
		// listDataChild.put(listDataHeader.get(2), comingSoon);
	}
}
